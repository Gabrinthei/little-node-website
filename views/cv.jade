extends layout

block content
    header
        h1.heading_supersize(style='font-size:5em;margin-bottom:-15px;') Curriculum Vitae
        h2.welcome_text Design &raquo Architect &raquo Develop
        center
            h5(style="margin-bottom:0")
                a(href='https://www.facebook.com/james.sonntag.75', title='facebook', style="margin-right:15px;").light <i class="icon-facebook-sign"></i> Facebook
                
                a(href='http://www.linkedin.com/in/jsonntag/', title='linkedin', style="margin-right:15px").light <i class="icon-linkedin-sign"></i> Linkedin
                
                a(href='https://github.com/Gabrinthei', title='github').light <i class="icon-github-alt"></i> Github

    section.section_light
        .row
            .large-9.columns
                h3.light 
                    span A quick list of qualifications
                div
                    ul
                        li Graduated May 2013 from Montana State University with a B.S. in Computer Science
                        li Well versed in object-oriented, imperative, and functional programming paradigms
                        li A strong passion for problem solving, teamwork, and being a part of something great

                h3.light
                    span Work History
                h5 Software Developer / System Administrator at TRG (07/2013 - Present)
                h6 Experience (.NET Framework, C#, SQL Server, Hardware/networking maintenance)

                p Responsible for core back-end technology development, including analysis, design, coding, and testing for a 24x7 high volume website, as well as maintaining remote user access and phone systems for employees of TRG
                p Introduced Mercurial SCM to company for faster and much more reliable source control
                p Developed, maintained, and assisted in the development of international trade software applications
                p Programming languages consists of C#, VB.NET, and JavaScript/jQuery,  with ASP.NET framework
                p Experience with Windows Server 2008, IIS, and SQL Server

                h5 Web Software Developer at Product Funder (02/2013 - 07/2013)
                h6 Experience (Python, Django Framework, MySQL & PostgreSQL)
                p Part of a small team developing and maintaining a full-stack, front to back, startup Django web application for the <a href="http://productfunder.com">ProductFunder.com</a> crowdfunding platform.<br>

                p Supporting and providing quality customer service in the development and integration of software applications and systems that enable customers to successfully meet their product funding goals
                p Programming languages consists of Python, jQuery and JavaScript built with a Django framework
                p Hands on experience with MySQL and Postgres database systems, Linux environment, and git SCM
                p Using the Heroku and Amazon AWS cloud application platforms


                h3.light
                    span Recent Personal Projects
                    small  <br>
                        a(href='https://github.com/Gabrinthei', title='github').light <i class="icon-github-alt"></i> Check these out and many more on my Github account
                        
                h5 This Site (Written in Node.js with MongoDB):
                p A simple website using Node.js, Express.js, mongoDB and Jade template. The site was a proof of concept, with a functional custom CMS; I plan to expand it with experiments of new and creative ideas.

                h5 <a href="https://github.com/Gabrinthei/pascal-compiler">µPascal Compiler</a> (Written in Haskell):
                p A fully functional compiler for µPascal, using the Haskell language. This involved writing a scanner, parser, semantic analyzer, machine code generator, and supporting functions.

                h5 <a href="https://github.com/Gabrinthei/Konane_Game_With_Minimax_Algorithm">Konane Game with MiniMax Player</a> (Written in Java):
                p The goal of this programming assignment was to implement the game of Konane and create an AI player using the MiniMax search algorithm, both with and without αβ-pruning

                h5 <a href="https://github.com/Gabrinthei/Artificially_Intelligent_Racecar">Reinforcement Learning Raceway</a> (Written in Java):
                p The goal was to control the movement of a race car along a pre-deﬁned racetrack. Wanting the race-car to get from the starting line to the ﬁnish line in a minimum amount of time, using Reinforcement Learning algorithms.


                h3.light
                    span Relevant Coursework
                dl
                    dt Compilers (Haskell)
                    dd - Senior capstone course. Compiler design and construction. Scanning, parsing, symbol tables, semantic analysis, intermediate representations, run-time memory management, target code generation, and optimization. Implementation of a small compiler using Haskell programming language.

                    dt Data Structures and Algorithms 1 and 2 (Java)
                    dd - Advanced data structures and programming techniques and their application. Topics include: stacks, queues, lists, trees, balanced trees, graphs, dictionaries, hash tables, and heaps. Examines the efficiency and correctness of algorithms.

                    dt Robotic Vision (C++)
                    dd - Image processing techniques to quantify and manipulate visual information in diverse applications such as satellite imagery, robotic vision, and animation. Topics include enhancement, representation, restoration, segmentation, and digitization techniques.

                    dt Artificial Intelligence (Java)
                    dd - The fundamental bases of artificial intelligence: knowledge representation, search, and learning. Applications include game playing, neural networks, and expert systems.

                    dt Windows & .NET Internals
                    dd - The end result, to be able to efficiently troubleshoot application faults. To be a more efficient troubleshooter but also to have a better understanding of how Windows and .NET function internally and thereby enabling to write better software for those platforms.

                    dt Database Systems (SQL)
                    dd - DBMS architecture; major database models; relational algebra fundamentals; SQL query language; index file structures, data modeling and management, entity relationship diagrams.

                    dt Networks (Python)
                    dd -  Organization of computer systems into networks and how communication over networks is organized. Communication protocols and their design with an emphasis on current technology and implementation of software.

                    dt Systems Administration
                    dd - The administration and management of Linux computer systems. Includes installation, user/process management, configuration of services and device handling. A thorough knowledge of Linux/Unix command structure is the end goal.

                    dt Software Engineering (Java)
                    dd - Software lifecycles, Unified Modeling Language, design patterns, software engineering standards, requirements analysis, development issues, efficiency tools, verification and validation, configuration management, testing and maintenance.

                    dt Computer Architecture (MIPS)
                    dd - Focusing on the structure and function of computer systems: CPU, memory, I/O. Includes digital logic, data type, instruction set design, pipelining, RISC, parallel processing, and assembly language programming.

                    dt Discrete Structures
                    dd - This course covered logic, discrete probability, recurrence relations, Boolean algebra, sets, relations, counting, functions, maps, Big-O notation, proof techniques including induction, and proof by contradiction.

                    dt Computer Science Theory
                    dd - Formal languages, theory, automata, Turing Machines, computability, the Church-Turing thesis, computational complexity, and NP-completenes.

                    dt Concepts of Programming Languages (Prolog, Perl, Lisp, C++)
                    dd - An examination of several programming paradigms, and languages, as well as their application and underlying execution model. Paradigms examined include imperative, object-oriented, functional, logic and string based.

            .large-3.columns
                ul.pricing-table
                    li.title Proficient Languages
                    li.bullet-item C#
                    li.bullet-item C++
                    li.bullet-item Haskell
                    li.bullet-item Java
                    li.bullet-item Javascript/Jquery
                    li.bullet-item Python
                ul.pricing-table
                    li.title APIs
                    li.bullet-item ASP.NET
                    li.bullet-item Django
                    li.bullet-item OpenGL
                ul.pricing-table
                    li.title Databases
                    li.bullet-item MySQL
                    li.bullet-item PostgreSQL
                    li.bullet-item SQL Server
                    li.bullet-item MongoDB